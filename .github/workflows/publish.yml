name: Publish Python üêç distributions üì¶ to PyPI and TestPyPI

on:
  push:
    tags:
      - "*"
  release:
    types: [published]

jobs:
  quality-checks:
    name: Quality checks before publish
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ["3.9", "3.10", "3.11", "3.12"]

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.25"
          enable-cache: true
          cache-dependency-glob: "uv.lock"


      - name: Install dependencies
        run: |
          uv sync --dev
          uv pip install -e .

      - name: Run quality checks
        run: |
          uv run ruff check . --diff --exclude Experimental --exclude .venv --exclude dist
          uv run ruff format --check . --exclude Experimental --exclude .venv --exclude dist
          uv run flake8 . --exclude=Experimental,.venv,dist
          uv run mypy weather_app/ || echo "MyPy issues found but continuing..."

      - name: Run tests
        run: |
          uv run pytest --verbose

      - name: Security scan
        run: |
          uv add safety bandit --dev
          uv run safety check
          uv run bandit -r weather_app/

  build-and-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ubuntu-latest
    needs: quality-checks

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ["3.9", "3.10", "3.11", "3.12"]

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.25"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Build distributions
        run: uv build

      - name: Test package installation
        run: |
          uv add dist/*.whl
          uv run weather-dashboard --help

      - name: Publish to TestPyPI (for test tags)
        if: startsWith(github.ref, 'refs/tags/test-')
        run: uv publish --index-url https://test.pypi.org/legacy/ --token ${{ secrets.PYPI_SECRET }}

      - name: Publish to PyPI (for versioned releases)
        if: startsWith(github.ref, 'refs/tags/v')
        run: uv publish --token ${{ secrets.PYPI_SECRET }}
