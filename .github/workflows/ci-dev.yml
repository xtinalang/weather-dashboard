name: Development CI

on:
  push:
    branches: [ develop, dev, development, Development ]
  pull_request:
    branches: [ develop, dev, development, Development ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.25"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv sync --dev
          uv pip install -e .

      - name: Run ruff linting
        run: |
          uv run ruff check . --exclude Experimental --exclude .venv --exclude dist
          uv run ruff format --check . --exclude Experimental --exclude .venv --exclude dist

      - name: Run flake8
        run: |
          uv run flake8 . --exclude=Experimental,.venv,dist

      - name: Run mypy type checking
        run: |
          uv run mypy weather_app/

      - name: Run tests with pytest
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        run: |
          uv run pytest --verbose --tb=short

      - name: Check if package builds
        run: |
          uv build

  playwright-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.25"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv sync --dev
          uv pip install -e .

      - name: Install Playwright
        run: |
          uv add playwright --dev
          uv run playwright install --with-deps

      - name: Start weather app (if needed for E2E tests)
        run: |
          # Start your weather app in the background if your tests need it running
          # uv run python -m weather_app &
          # sleep 5  # Give it time to start
          echo "Add your app startup command here if needed"

      - name: Run Playwright tests
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        run: |
          uv run playwright test

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.python-version }}
          path: playwright-report/
          retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.25"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Run safety check (if available)
        continue-on-error: true
        run: |
          uv add safety --dev
          uv run safety check

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.25"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Check code complexity (if available)
        continue-on-error: true
        run: |
          uv add radon --dev
          uv run radon cc weather_app/ --min B

      - name: Generate coverage report
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        run: |
          uv add coverage --dev
          uv run coverage run -m pytest
          uv run coverage report
          uv run coverage html

      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: htmlcov/

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.25"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Run pre-commit hooks
        run: |
          uv add pre-commit --dev
          uv run pre-commit run --all-files
